{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timer","state","date","Date","this","window","setInterval","setState","console","log","toLocaleTimeString","name","props","clearInterval","className","React","Component","App","isClockVisible","clockName","setRandomName","newName","Math","floor","random","switchClock","buttonText","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,WADF,IAGEC,MAAQ,CACNC,KAAM,IAAIC,MAJd,uDAOE,WAAqB,IAAD,OAClBC,KAAKJ,MAAQK,OAAOC,aAAY,WAC9B,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAG5BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBACzB,OAbP,gCAgBE,YAAqC,IAAhBC,EAAe,EAAfA,KACfA,IAASP,KAAKQ,MAAMD,MAExBH,QAAQC,IAAR,qCAA0CE,EAA1C,eAAqDP,KAAKQ,MAAMD,SAnBpE,kCAuBE,WACEE,cAAcT,KAAKJ,SAxBvB,oBA2BE,WACE,IAAQE,EAASE,KAAKH,MAAdC,KAER,OACE,oBAAGY,UAAU,OAAb,0BAEG,IACD,iCACGZ,EAAKQ,8BAnChB,GAA2BK,IAAMC,WCC3BC,E,4MACJhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAW,G,EAGbC,cAAgB,WACd,IAAMC,EAAUC,KAAKC,MAAsB,IAAhBD,KAAKE,UAEhC,EAAKjB,SAAS,CAAEY,UAAWE,K,EAG7BI,YAAc,WACZ,IAAQP,EAAmB,EAAKjB,MAAxBiB,eAER,EAAKX,SAAS,CAAEW,gBAAiBA,K,4CAGnC,WAAU,IAAD,OACP,EAAsCd,KAAKH,MAAnCiB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAClBO,EAAaR,EAAiB,aAAe,aAEnD,OACE,sBAAKJ,UAAU,MAAf,UACE,6CACA,wBACEA,UAAU,SACVa,KAAK,SACLC,QAAS,WACP,EAAKH,eAJT,SAOGC,IAEFR,GAEC,wBACEJ,UAAU,SACVa,KAAK,SACLC,QAAS,WACP,EAAKR,iBAJT,6BAUDF,GAAkB,cAAC,EAAD,CAAOP,KAAMQ,W,GA9CtBJ,IAAMC,WAoDTC,IC5DfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b91a2904.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: number,\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  timer?: number;\n\n  state = {\n    date: new Date(),\n  };\n\n  componentDidMount() {\n    this.timer = window.setInterval(() => {\n      this.setState({ date: new Date() });\n\n      // eslint-disable-next-line\n    console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate({ name }: Props) {\n    if (name !== this.props.name) {\n      // eslint-disable-next-line\n    console.log(`The Clock was renamed from ${name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <p className=\"time\">\n        Current time:\n        {' '}\n        <strong>\n          {date.toLocaleTimeString()}\n        </strong>\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nexport type Props = {};\n\nexport type State = {\n  isClockVisible: boolean;\n  clockName: number;\n};\n\nclass App extends React.Component<Props, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  setRandomName = () => {\n    const newName = Math.floor(Math.random() * 100);\n\n    this.setState({ clockName: newName });\n  };\n\n  switchClock = () => {\n    const { isClockVisible } = this.state;\n\n    this.setState({ isClockVisible: !isClockVisible });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n    const buttonText = isClockVisible ? 'Hide Clock' : 'Show Clock';\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            this.switchClock();\n          }}\n        >\n          {buttonText}\n        </button>\n        {isClockVisible\n        && (\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={() => {\n              this.setRandomName();\n            }}\n          >\n            Set random name\n          </button>\n        )}\n        {isClockVisible && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}